class Solution {
public:
    string vowel = "aeiou";
    bool fn(string& s) {
        return vowel.find(s[0]) != string::npos && vowel.find(s.back()) != string::npos;
    }
    vector<int> vowelStrings(vector<string>& words,vector<vector<int>>& queries) {
        vector<int> psum;
        psum.push_back(0);
        for (auto& it : words) {
            if (fn(it))
                psum.push_back(psum.back() + 1);
            else
                psum.push_back(psum.back());
        }
        vector<int> ans;
        for (auto& it : queries) {
            ans.push_back(psum[it[1] + 1] - psum[it[0]]);
        }
        return ans;
    }
};
